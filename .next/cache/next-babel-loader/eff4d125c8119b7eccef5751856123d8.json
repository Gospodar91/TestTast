{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\TestTaskNextJs\\\\testDevOps\\\\TestTast\\\\nextjs-blog\\\\components\\\\form\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n        width: \"100%\"\n      }\n    }\n  };\n});\n\nvar Form = function Form(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _useState = useState(),\n      textTitle = _useState[0],\n      setTextTitle = _useState[1];\n\n  var _useState2 = useState(),\n      textBody = _useState2[0],\n      setTextBody = _useState2[1];\n\n  var changeHandlerTitle = function changeHandlerTitle(event) {\n    setTextTitle(event.target.value);\n  };\n\n  var changeHandlerBody = function changeHandlerBody(event) {\n    setTextBody(event.target.value);\n  };\n\n  var keyPress = function keyPress(event) {\n    if (event.key === \"Enter\") {\n      props.onAdd(textTitle, textBody);\n      setTextTitle(\"\");\n      setTextBody(\"\");\n    }\n  };\n\n  return __jsx(React.Fragment, null, __jsx(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    onKeyPress: keyPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: \"formDiv\",\n    label: \"Title\",\n    onChange: changeHandlerTitle,\n    value: textTitle,\n    id: \"outlined-size-normal\",\n    defaultValue: \"\",\n    variant: \"filled\",\n    color: \"secondary\",\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  }, __jsx(TextField, {\n    className: \"formDiv\",\n    label: \"Message\",\n    onChange: changeHandlerBody,\n    value: textBody,\n    id: \"outlined-size-normal\",\n    defaultValue: \"\",\n    variant: \"filled\",\n    color: \"secondary\",\n    autoFocus: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  })))));\n};\n\n_s(Form, \"QecXyculyO23SbHG+iCVVlTBfc8=\", false, function () {\n  return [useStyles];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/components/form/Form.tsx"],"names":["React","useState","makeStyles","TextField","useStyles","theme","root","margin","spacing","width","Form","props","classes","textTitle","setTextTitle","textBody","setTextBody","changeHandlerTitle","event","target","value","changeHandlerBody","keyPress","key","onAdd"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,IAAMC,SAAS,GAAGF,UAAU,CAAC,UAACG,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJ,8BAAwB;AACtBC,QAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADc;AAEtBC,QAAAA,KAAK,EAAE;AAFe;AADpB;AADiC,GAAZ;AAAA,CAAD,CAA5B;;AAQA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,CAACC,KAAD,EAAW;AAAA;;AAC3C,MAAMC,OAAO,GAAGR,SAAS,EAAzB;;AAD2C,kBAETH,QAAQ,EAFC;AAAA,MAEpCY,SAFoC;AAAA,MAEzBC,YAFyB;;AAAA,mBAGXb,QAAQ,EAHG;AAAA,MAGpCc,QAHoC;AAAA,MAG1BC,WAH0B;;AAI3C,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAA0C;AACnEJ,IAAAA,YAAY,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAZ;AACD,GAFD;;AAGA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,KAAD,EAA0C;AAClEF,IAAAA,WAAW,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD,GAFD;;AAGA,MAAME,QAAQ,GAAG,SAAXA,QAAW,CAACJ,KAAD,EAAgC;AAC/C,QAAIA,KAAK,CAACK,GAAN,KAAc,OAAlB,EAA2B;AACzBZ,MAAAA,KAAK,CAACa,KAAN,CAAYX,SAAZ,EAAwBE,QAAxB;AACAD,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACAE,MAAAA,WAAW,CAAC,EAAD,CAAX;AACD;AACF,GAND;;AAQA,SACE,4BACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,SAAS,EAAEJ,OAAO,CAACN,IADrB;AAEE,IAAA,UAAU,MAFZ;AAGE,IAAA,YAAY,EAAC,KAHf;AAIE,IAAA,UAAU,EAAEgB,QAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,QAAQ,EAAEL,kBAHZ;AAIE,IAAA,KAAK,EAAEJ,SAJT;AAKE,IAAA,EAAE,EAAC,sBALL;AAME,IAAA,YAAY,EAAC,EANf;AAOE,IAAA,OAAO,EAAC,QAPV;AAQE,IAAA,KAAK,EAAC,WARR;AASE,IAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,EAmBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,SADZ;AAEE,IAAA,KAAK,EAAC,SAFR;AAGE,IAAA,QAAQ,EAAEQ,iBAHZ;AAIE,IAAA,KAAK,EAAEN,QAJT;AAKE,IAAA,EAAE,EAAC,sBALL;AAME,IAAA,YAAY,EAAC,EANf;AAOE,IAAA,OAAO,EAAC,QAPV;AAQE,IAAA,KAAK,EAAC,WARR;AASE,IAAA,SAAS,MATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAnBF,CADF,CADF,CADF;AAuCD,CAzDD;;GAAML,I;UACYN,S;;;KADZM,I;AA0DN,eAAeA,IAAf","sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\r\nimport { FormProps } from \"../interfaces\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"100%\",\r\n    },\r\n  },\r\n}));\r\nconst Form: React.FC<FormProps> = (props) => {\r\n  const classes = useStyles();\r\n  const [textTitle, setTextTitle] = useState<string>();\r\n  const [textBody, setTextBody] = useState<string>();\r\n  const changeHandlerTitle = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTextTitle(event.target.value);\r\n  };\r\n  const changeHandlerBody = (event: ChangeEvent<HTMLInputElement>) => {\r\n    setTextBody(event.target.value);\r\n  };\r\n  const keyPress = (event: React.KeyboardEvent) => {\r\n    if (event.key === \"Enter\") {\r\n      props.onAdd(textTitle!, textBody!);\r\n      setTextTitle(\"\");\r\n      setTextBody(\"\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"\">\r\n        <form\r\n          className={classes.root}\r\n          noValidate\r\n          autoComplete=\"off\"\r\n          onKeyPress={keyPress}\r\n        >\r\n          <div>\r\n            <TextField\r\n              className=\"formDiv\"\r\n              label=\"Title\"\r\n              onChange={changeHandlerTitle}\r\n              value={textTitle}\r\n              id=\"outlined-size-normal\"\r\n              defaultValue=\"\"\r\n              variant=\"filled\"\r\n              color=\"secondary\"\r\n              autoFocus\r\n            />\r\n          </div>\r\n          <div>\r\n            <TextField\r\n              className=\"formDiv\"\r\n              label=\"Message\"\r\n              onChange={changeHandlerBody}\r\n              value={textBody}\r\n              id=\"outlined-size-normal\"\r\n              defaultValue=\"\"\r\n              variant=\"filled\"\r\n              color=\"secondary\"\r\n              autoFocus\r\n            />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Form;\r\n"]},"metadata":{},"sourceType":"module"}
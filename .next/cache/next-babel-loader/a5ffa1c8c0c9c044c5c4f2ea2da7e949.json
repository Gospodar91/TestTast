{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nexport var operations = {\n  getAllPosts: function getAllPosts() {\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(\"https://simple-blog-api.crew.red/posts\");\n\n            case 3:\n              data = _context.sent;\n              return _context.abrupt(\"return\", data.data);\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"GetSummaryError\", _context.t0);\n              ;\n              throw new Error();\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }))();\n  }\n};","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/pages/operations.js"],"names":["axios","operations","getAllPosts","get","data","console","log","Error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,IAAMC,UAAU,GAAG;AACnBC,EAAAA,WADmB,yBACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEIF,KAAK,CAACG,GAAN,0CAFJ;;AAAA;AAETC,cAAAA,IAFS;AAAA,+CAIRA,IAAI,CAACA,IAJG;;AAAA;AAAA;AAAA;AAMfC,cAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACF;AAPiB,oBAQT,IAAIC,KAAJ,EARS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUlB;AAXuB,CAAnB","sourcesContent":["import axios from \"axios\";\r\nexport const operations = {\r\n async getAllPosts() {\r\n    try {\r\n      const data = await axios.get(`https://simple-blog-api.crew.red/posts`);\r\n    //   console.log('data', data.data)\r\n      return data.data;\r\n    } catch (error) {\r\n      console.log(\"GetSummaryError\", error);\r\n    ;\r\n      throw new Error();\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"E:\\\\TestTaskNextJs\\\\testDevOps\\\\TestTast\\\\nextjs-blog\\\\components\\\\form\\\\Form.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState } from \"react\";\n\n// interface Itext {\n//     title: string;\n//     body: string;\n//   }\nvar Form = function Form(props) {\n  _s();\n\n  var initialState = {\n    title: null,\n    body: null\n  };\n\n  var _useState = useState(),\n      textTitle = _useState[0],\n      setTextTitle = _useState[1];\n\n  var _useState2 = useState(),\n      textBody = _useState2[0],\n      setTextBody = _useState2[1];\n\n  var _useState3 = useState(initialState),\n      textState = _useState3[0],\n      setTextState = _useState3[1]; //   const changeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\n  //     setTextState({title:event[0].target.value,body:event[1].target.value})\n  // }\n\n\n  var changeHandlerTitle = function changeHandlerTitle(event) {\n    //   setTextTitle(event.target.value)\n    setTextState();\n  };\n\n  var changeHandlerBody = function changeHandlerBody(event) {\n    //   setTextBody(event.target.value)\n    setTextState({\n      title: event[0].target.value,\n      body: event[1].target.value\n    });\n  };\n\n  var keyPress = function keyPress(event) {\n    // if(event.key==='Enter'){\n    //    props.onAdd(textTitle!,textBody!)\n    //     setTextTitle('')\n    //     setTextBody('')\n    // }\n    if (event.key === 'Enter') {\n      props.onAdd(textState.title, textState.body);\n      console.log('textState', textState);\n      setTextState({\n        title: \"\",\n        body: \"\"\n      }); //  setTextState('')\n    }\n  };\n\n  return (// <div className=\"input-field\">\n    //     <form className='form'>\n    //   <input \n    //   onChange={changeHandlerTitle}\n    //   value={textTitle}\n    //   onKeyPress={keyPress}\n    //   placeholder='Enter Title'\n    //   type=\"text\" id=\"title\" />\n    //   <label htmlFor=\"title\" className=\"active\">\n    //   Enter Title\n    //   </label>\n    //   <input \n    //   onChange={changeHandlerBody}\n    //   value={textBody}\n    //   onKeyPress={keyPress}\n    //   placeholder='Enter description'\n    //   type=\"text\" id=\"body\" />\n    //   <label htmlFor=\"body\" className=\"active\">\n    //  Enter description\n    //   </label>\n    //   <h3> Fill the blanks and press Enter</h3>\n    //   </form>\n    // </div>\n    __jsx(\"div\", {\n      className: \"input-field\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }\n    }, __jsx(\"form\", {\n      className: \"form\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      onChange: changeHandlerTitle,\n      value: textState.title,\n      onKeyPress: keyPress,\n      placeholder: \"Enter Title\",\n      type: \"text\",\n      id: \"title\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 7\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"title\",\n      className: \"active\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 7\n      }\n    }, \"Enter Title\"), __jsx(\"input\", {\n      onChange: changeHandlerBody,\n      value: textState.body,\n      onKeyPress: keyPress,\n      placeholder: \"Enter description\",\n      type: \"text\",\n      id: \"body\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }\n    }), __jsx(\"label\", {\n      htmlFor: \"body\",\n      className: \"active\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, \"Enter description\"), __jsx(\"h3\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 7\n      }\n    }, \" Fill the blanks and press Enter\")))\n  );\n};\n\n_s(Form, \"l/KKQO1abSEUHuEngwp/ETW65wc=\");\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/components/form/Form.tsx"],"names":["React","useState","Form","props","initialState","title","body","textTitle","setTextTitle","textBody","setTextBody","textState","setTextState","changeHandlerTitle","event","changeHandlerBody","target","value","keyPress","key","onAdd","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA6C,OAA7C;;AAMA;AACA;AACA;AACA;AACA,IAAMC,IAAyB,GAAG,SAA5BA,IAA4B,CAACC,KAAD,EAAW;AAAA;;AACzC,MAAMC,YAAY,GAAG;AACjBC,IAAAA,KAAK,EAAE,IADU;AAEjBC,IAAAA,IAAI,EAAE;AAFW,GAArB;;AADyC,kBAKTL,QAAQ,EALC;AAAA,MAKpCM,SALoC;AAAA,MAKzBC,YALyB;;AAAA,mBAMXP,QAAQ,EANG;AAAA,MAMpCQ,QANoC;AAAA,MAM1BC,WAN0B;;AAAA,mBAOTT,QAAQ,CAACG,YAAD,CAPC;AAAA,MAOpCO,SAPoC;AAAA,MAOzBC,YAPyB,kBAU7C;AACA;AACA;;;AAcE,MAAMC,kBAAkB,GAAC,SAAnBA,kBAAmB,CAACC,KAAD,EAAuC;AAC9D;AACAF,IAAAA,YAAY;AACb,GAHD;;AAIA,MAAMG,iBAAiB,GAAC,SAAlBA,iBAAkB,CAACD,KAAD,EAAuC;AAC7D;AACAF,IAAAA,YAAY,CAAC;AAACP,MAAAA,KAAK,EAACS,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,CAAgBC,KAAvB;AAA6BX,MAAAA,IAAI,EAACQ,KAAK,CAAC,CAAD,CAAL,CAASE,MAAT,CAAgBC;AAAlD,KAAD,CAAZ;AACD,GAHD;;AAIA,MAAMC,QAAQ,GAAC,SAATA,QAAS,CAACJ,KAAD,EACf;AACF;AACA;AAEA;AACA;AAEA;AACA,QAAGA,KAAK,CAACK,GAAN,KAAY,OAAf,EAAuB;AACpBhB,MAAAA,KAAK,CAACiB,KAAN,CAAYT,SAAS,CAACN,KAAtB,EAA4BM,SAAS,CAACL,IAAtC;AACAe,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBX,SAAzB;AACAC,MAAAA,YAAY,CAAC;AAACP,QAAAA,KAAK,EAAC,EAAP;AAAUC,QAAAA,IAAI,EAAC;AAAf,OAAD,CAAZ,CAHoB,CAKvB;AAEC;AACE,GAjBD;;AAkBA,SACE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AACA,MAAA,QAAQ,EAAEO,kBADV;AAEA,MAAA,KAAK,EAAEF,SAAS,CAACN,KAFjB;AAGA,MAAA,UAAU,EAAEa,QAHZ;AAIA,MAAA,WAAW,EAAC,aAJZ;AAKA,MAAA,IAAI,EAAC,MALL;AAKY,MAAA,EAAE,EAAC,OALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADE,EAOF;AAAO,MAAA,OAAO,EAAC,OAAf;AAAuB,MAAA,SAAS,EAAC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPE,EAUF;AACA,MAAA,QAAQ,EAAEH,iBADV;AAEA,MAAA,KAAK,EAAEJ,SAAS,CAACL,IAFjB;AAGA,MAAA,UAAU,EAAEY,QAHZ;AAIA,MAAA,WAAW,EAAC,mBAJZ;AAKA,MAAA,IAAI,EAAC,MALL;AAKY,MAAA,EAAE,EAAC,MALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVE,EAgBF;AAAO,MAAA,OAAO,EAAC,MAAf;AAAsB,MAAA,SAAS,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAhBE,EAmBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CAnBE,CADJ;AAxBF;AAgDD,CApGD;;GAAMhB,I;;KAAAA,I;AAqGN,eAAeA,IAAf","sourcesContent":["import React, { useState, ChangeEvent } from \"react\";\r\n\r\n\r\ninterface FormProps{\r\n    onAdd(title?:string,body?:string):void\r\n}\r\n// interface Itext {\r\n//     title: string;\r\n//     body: string;\r\n//   }\r\nconst Form: React.FC<FormProps> = (props) => {\r\n    const initialState = {\r\n        title: null,\r\n        body: null,\r\n      };\r\n  const [textTitle, setTextTitle] = useState<string>();\r\n  const [textBody, setTextBody] = useState<string>();\r\n  const [textState, setTextState] = useState(initialState);\r\n\r\n\r\n//   const changeHandler=(event:ChangeEvent<HTMLInputElement>)=>{\r\n//     setTextState({title:event[0].target.value,body:event[1].target.value})\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const changeHandlerTitle=(event:ChangeEvent<HTMLInputElement>)=>{\r\n    //   setTextTitle(event.target.value)\r\n    setTextState()\r\n  }\r\n  const changeHandlerBody=(event:ChangeEvent<HTMLInputElement>)=>{\r\n    //   setTextBody(event.target.value)\r\n    setTextState({title:event[0].target.value,body:event[1].target.value})\r\n  }\r\n  const keyPress=(event:React.KeyboardEvent)=>\r\n  {\r\n// if(event.key==='Enter'){\r\n//    props.onAdd(textTitle!,textBody!)\r\n  \r\n//     setTextTitle('')\r\n//     setTextBody('')\r\n\r\n// }\r\nif(event.key==='Enter'){\r\n   props.onAdd(textState.title,textState.body)\r\n   console.log('textState', textState)\r\n   setTextState({title:\"\",body:\"\"})\r\n  \r\n//  setTextState('')\r\n\r\n}\r\n  }\r\n  return (\r\n    // <div className=\"input-field\">\r\n    //     <form className='form'>\r\n    //   <input \r\n    //   onChange={changeHandlerTitle}\r\n    //   value={textTitle}\r\n    //   onKeyPress={keyPress}\r\n    //   placeholder='Enter Title'\r\n    //   type=\"text\" id=\"title\" />\r\n    //   <label htmlFor=\"title\" className=\"active\">\r\n    //   Enter Title\r\n    //   </label>\r\n    //   <input \r\n    //   onChange={changeHandlerBody}\r\n    //   value={textBody}\r\n    //   onKeyPress={keyPress}\r\n    //   placeholder='Enter description'\r\n    //   type=\"text\" id=\"body\" />\r\n    //   <label htmlFor=\"body\" className=\"active\">\r\n    //  Enter description\r\n    //   </label>\r\n    //   <h3> Fill the blanks and press Enter</h3>\r\n    //   </form>\r\n    // </div>\r\n    <div className=\"input-field\">\r\n        <form className='form'>\r\n      <input \r\n      onChange={changeHandlerTitle}\r\n      value={textState.title}\r\n      onKeyPress={keyPress}\r\n      placeholder='Enter Title'\r\n      type=\"text\" id=\"title\" />\r\n      <label htmlFor=\"title\" className=\"active\">\r\n      Enter Title\r\n      </label>\r\n      <input \r\n      onChange={changeHandlerBody}\r\n      value={textState.body}\r\n      onKeyPress={keyPress}\r\n      placeholder='Enter description'\r\n      type=\"text\" id=\"body\" />\r\n      <label htmlFor=\"body\" className=\"active\">\r\n     Enter description\r\n      </label>\r\n      <h3> Fill the blanks and press Enter</h3>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\nexport default Form"]},"metadata":{},"sourceType":"module"}
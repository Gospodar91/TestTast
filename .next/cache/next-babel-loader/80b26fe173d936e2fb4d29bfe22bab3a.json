{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nexport function getSortedPostsData() {\n  return _getSortedPostsData.apply(this, arguments);\n}\n\nfunction _getSortedPostsData() {\n  _getSortedPostsData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var posts;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return axios.get(\"https://simple-blog-api.crew.red/posts\");\n\n          case 3:\n            posts = _context.sent;\n            return _context.abrupt(\"return\", posts.data.map(function (post) {\n              return {\n                params: _objectSpread({\n                  id: post.id.toString()\n                }, post)\n              };\n            }));\n\n          case 7:\n            _context.prev = 7;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(\"ERRROR--------------------------------->\", _context.t0);\n            throw new Error();\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[0, 7]]);\n  }));\n  return _getSortedPostsData.apply(this, arguments);\n}\n\nexport function getAllPostIds() {\n  return _getAllPostIds.apply(this, arguments);\n}\n\nfunction _getAllPostIds() {\n  _getAllPostIds = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var posts;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return axios.get(\"https://simple-blog-api.crew.red/posts\");\n\n          case 3:\n            posts = _context2.sent;\n            return _context2.abrupt(\"return\", posts.data.map(function (post) {\n              return {\n                params: {\n                  id: post.id.toString()\n                }\n              };\n            }));\n\n          case 7:\n            _context2.prev = 7;\n            _context2.t0 = _context2[\"catch\"](0);\n            console.log(\"ERRROR--------------------------------->\", _context2.t0);\n            throw new Error();\n\n          case 11:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 7]]);\n  }));\n  return _getAllPostIds.apply(this, arguments);\n}\n\nexport function getPostData(_x) {\n  return _getPostData.apply(this, arguments);\n}\n\nfunction _getPostData() {\n  _getPostData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(params) {\n    var postsInfo;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.prev = 0;\n            _context3.next = 3;\n            return axios.get(\"https://simple-blog-api.crew.red/posts/\".concat(params.id, \"?_embed=comments\"));\n\n          case 3:\n            postsInfo = _context3.sent;\n            return _context3.abrupt(\"return\", postsInfo.data);\n\n          case 7:\n            _context3.prev = 7;\n            _context3.t0 = _context3[\"catch\"](0);\n            console.log(\"ERRROR--------------------------------->\", _context3.t0);\n            throw new Error();\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[0, 7]]);\n  }));\n  return _getPostData.apply(this, arguments);\n}","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/lib/posts.ts"],"names":["axios","getSortedPostsData","get","posts","data","map","post","params","id","toString","console","log","Error","getAllPostIds","getPostData","postsInfo"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,gBAAsBC,kBAAtB;AAAA;AAAA;;;iFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBD,KAAK,CAACE,GAAN,CAAU,wCAAV,CAFjB;;AAAA;AAEGC,YAAAA,KAFH;AAAA,6CAGIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACC,IAAD,EAAU;AAC9B,qBAAO;AACLC,gBAAAA,MAAM;AACJC,kBAAAA,EAAE,EAAEF,IAAI,CAACE,EAAL,CAAQC,QAAR;AADA,mBAEDH,IAFC;AADD,eAAP;AAMD,aAPM,CAHJ;;AAAA;AAAA;AAAA;AAYHI,YAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AAZG,kBAaG,IAAIC,KAAJ,EAbH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAiBP,gBAAsBC,aAAtB;AAAA;AAAA;;;4EAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEiBb,KAAK,CAACE,GAAN,CAAU,wCAAV,CAFjB;;AAAA;AAEGC,YAAAA,KAFH;AAAA,8CAGIA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAACC,IAAD,EAAU;AAC9B,qBAAO;AACLC,gBAAAA,MAAM,EAAE;AACNC,kBAAAA,EAAE,EAAEF,IAAI,CAACE,EAAL,CAAQC,QAAR;AADE;AADH,eAAP;AAKD,aANM,CAHJ;;AAAA;AAAA;AAAA;AAWHC,YAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AAXG,kBAYG,IAAIC,KAAJ,EAZH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAgBP,gBAAsBE,WAAtB;AAAA;AAAA;;;0EAAO,kBAA2BP,MAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAEqBP,KAAK,CAACE,GAAN,kDACoBK,MAAM,CAACC,EAD3B,sBAFrB;;AAAA;AAEGO,YAAAA,SAFH;AAAA,8CAKIA,SAAS,CAACX,IALd;;AAAA;AAAA;AAAA;AAOHM,YAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ;AAPG,kBAQG,IAAIC,KAAJ,EARH;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["import axios from \"axios\";\r\nexport async function getSortedPostsData() {\r\n  try {\r\n    const posts = await axios.get(\"https://simple-blog-api.crew.red/posts\");\r\n    return posts.data.map((post) => {\r\n      return {\r\n        params: {\r\n          id: post.id.toString(),\r\n          ...post,\r\n        },\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.log(\"ERRROR--------------------------------->\", error);\r\n    throw new Error();\r\n  }\r\n}\r\n\r\nexport async function getAllPostIds() {\r\n  try {\r\n    const posts = await axios.get(\"https://simple-blog-api.crew.red/posts\");\r\n    return posts.data.map((post) => {\r\n      return {\r\n        params: {\r\n          id: post.id.toString(),\r\n        },\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.log(\"ERRROR--------------------------------->\", error);\r\n    throw new Error();\r\n  }\r\n}\r\n\r\nexport async function getPostData(params) {\r\n  try {\r\n    const postsInfo = await axios.get(\r\n      `https://simple-blog-api.crew.red/posts/${params.id}?_embed=comments`\r\n    );\r\n    return postsInfo.data;\r\n  } catch (error) {\r\n    console.log(\"ERRROR--------------------------------->\", error);\r\n    throw new Error();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
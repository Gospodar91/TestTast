{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TestTaskNextJs\\\\testDevOps\\\\TestTast\\\\nextjs-blog\\\\pages\\\\posts\\\\CreatePost.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport Form from \"../../components/form/Form\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json; charset=UTF-8\";\n\nvar createPost = function createPost() {\n  _s();\n\n  var initialState = {\n    title: null,\n    body: null\n  };\n\n  var _useState = useState(initialState),\n      textState = _useState[0],\n      setTextState = _useState[1];\n\n  var pushPost = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios({\n                method: \"post\",\n                url: \"https://simple-blog-api.crew.red/posts/\",\n                data: _objectSpread({}, textState)\n              });\n\n            case 3:\n              data = _context.sent;\n              _context.next = 10;\n              break;\n\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(\"POST ERROR\", _context.t0);\n              throw new Error();\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 6]]);\n    }));\n\n    return function pushPost() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  if (textState.body && textState.title) {\n    pushPost();\n  }\n\n  var addhandler = function addhandler(title, body) {\n    var mainPost = {\n      title: title,\n      body: body\n    };\n    setTextState(mainPost);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onAdd: addhandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"backToHome\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to home\"))));\n};\n\n_s(createPost, \"yBjCFvH1RStHgOxsLXT/6qEmWwQ=\");\n\nexport default createPost;","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/pages/posts/CreatePost.tsx"],"names":["useState","axios","Link","Form","defaults","headers","post","createPost","initialState","title","body","textState","setTextState","pushPost","method","url","data","console","log","Error","addhandler","mainPost"],"mappings":";;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,iCAA9C;;AAKA,IAAMC,UAAoB,GAAG,SAAvBA,UAAuB,GAAM;AAAA;;AACjC,MAAMC,YAAY,GAAC;AACjBC,IAAAA,KAAK,EAAC,IADW;AAEjBC,IAAAA,IAAI,EAAC;AAFY,GAAnB;;AADiC,kBAKCV,QAAQ,CAACQ,YAAD,CALT;AAAA,MAK1BG,SAL0B;AAAA,MAKfC,YALe;;AAMjC,MAAMC,QAAQ;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEMZ,KAAK,CAAC;AACvBa,gBAAAA,MAAM,EAAE,MADe;AAEvBC,gBAAAA,GAAG,EAAE,yCAFkB;AAGvBC,gBAAAA,IAAI,oBAAKL,SAAL;AAHmB,eAAD,CAFX;;AAAA;AAEPK,cAAAA,IAFO;AAAA;AAAA;;AAAA;AAAA;AAAA;AAQbC,cAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AARa,oBASP,IAAIC,KAAJ,EATO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAARN,QAAQ;AAAA;AAAA;AAAA,KAAd;;AAYA,MAAIF,SAAS,CAACD,IAAV,IAAkBC,SAAS,CAACF,KAAhC,EAAuC;AACrCI,IAAAA,QAAQ;AACT;;AAED,MAAMO,UAAU,GAAG,SAAbA,UAAa,CAACX,KAAD,EAAgBC,IAAhB,EAAiC;AAClD,QAAMW,QAAgB,GAAG;AACvBZ,MAAAA,KAAK,EAAEA,KADgB;AAEvBC,MAAAA,IAAI,EAACA;AAFkB,KAAzB;AAMAE,IAAAA,YAAY,CAACS,QAAD,CAAZ;AAED,GATD;;AAWA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAED,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CAFF,CADF;AAUD,CA3CD;;GAAMb,U;;AA4CN,eAAeA,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Link from \"next/link\";\r\nimport Form from \"../../components/form/Form\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json; charset=UTF-8\";\r\ninterface Itotal{\r\n  title:string\r\n  body:string\r\n}\r\nconst createPost: React.FC = () => {\r\n  const initialState={\r\n    title:null,\r\n    body:null\r\n  }\r\n  const [textState, setTextState] = useState(initialState);\r\n  const pushPost = async () => {\r\n    try {\r\n      const data = await axios({\r\n        method: \"post\",\r\n        url: \"https://simple-blog-api.crew.red/posts/\",\r\n        data:{...textState},\r\n      });\r\n    } catch (error) {\r\n      console.log(\"POST ERROR\", error);\r\n      throw new Error();\r\n    }\r\n  };\r\n  if (textState.body && textState.title) {\r\n    pushPost();\r\n  }\r\n \r\n  const addhandler = (title: string, body: string) => {\r\n    const mainPost: Itotal = {\r\n      title: title,\r\n      body:body\r\n    };\r\n  \r\n\r\n    setTextState(mainPost);\r\n  \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onAdd={addhandler} />\r\n      <div className=\"backToHome\">\r\n        <Link href=\"/\">\r\n          <a>‚Üê Back to home</a>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default createPost;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TestTaskNextJs\\\\testDevOps\\\\TestTast\\\\nextjs-blog\\\\pages\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Head from 'next/head';\nimport Layout, { siteTitle } from '../components/layout';\nimport utilStyles from '../styles/utils.module.css';\nimport { operations } from '../pages/operations';\n\n// export async function getAllPostsFromServer() {\n//   const allPostsDataFromServer = getAllPosts()\n//   return {\n//     props: {\n//       allPostsDataFromServer\n//     }\n//   }\n// }\nvar Home = function Home(_ref) {\n  _s();\n\n  var allPostsData = _ref.allPostsData,\n      allPostsDataFromServer = _ref.allPostsDataFromServer;\n\n  var _useState = useState(),\n      postState = _useState[0],\n      setPostState = _useState[1];\n\n  var getPosts = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log('Hello');\n              _context.next = 3;\n              return operations.getAllPosts().then(function (data) {\n                return setPostState(data);\n              });\n\n            case 3:\n              _context.next = 5;\n              return console.log('postState', postState);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getPosts() {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // getPosts();\n\n\n  useEffect(function () {\n    getPosts();\n  }, [postState]);\n  return __jsx(Layout, {\n    home: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"\\u2026\"), __jsx(\"section\", {\n    className: \"\".concat(utilStyles.headingMd, \" \").concat(utilStyles.padding1px),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: utilStyles.headingLg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"Blog\"), __jsx(\"ul\", {\n    className: utilStyles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, allPostsData.map(function (_ref3) {\n    var id = _ref3.id,\n        date = _ref3.date,\n        title = _ref3.title;\n    return __jsx(\"li\", {\n      className: utilStyles.listItem,\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }, title, __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), id, __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }), date);\n  }))));\n};\n\n_s(Home, \"zycGgxCXviPx68xe0ufPiTKEPUc=\");\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/pages/index.js"],"names":["useEffect","useState","Head","Layout","siteTitle","utilStyles","operations","Home","allPostsData","allPostsDataFromServer","postState","setPostState","getPosts","console","log","getAllPosts","then","data","headingMd","padding1px","headingLg","list","map","id","date","title","listItem"],"mappings":";;;;;;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,SAASC,UAAT,QAA0B,qBAA1B;;AAUE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD,IAAMC,IAAI,GAAC,SAALA,IAAK,OAA6C;AAAA;;AAAA,MAA1CC,YAA0C,QAA1CA,YAA0C;AAAA,MAA3BC,sBAA2B,QAA3BA,sBAA2B;;AAAA,kBACrBR,QAAQ,EADa;AAAA,MAChDS,SADgD;AAAA,MACrCC,YADqC;;AAEvD,MAAOC,QAAQ;AAAA,yEAAE;AAAA;AAAA;AAAA;AAAA;AACfC,cAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AADe;AAAA,qBAETR,UAAU,CAACS,WAAX,GAAyBC,IAAzB,CAA8B,UAACC,IAAD;AAAA,uBAAUN,YAAY,CAAEM,IAAF,CAAtB;AAAA,eAA9B,CAFS;;AAAA;AAAA;AAAA,qBAGVJ,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,SAAzB,CAHU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA,oBAARE,QAAQ;AAAA;AAAA;AAAA,KAAf,CAFuD,CAOvD;;;AACAZ,EAAAA,SAAS,CAAC,YAAM;AACdY,IAAAA,QAAQ;AACT,GAFQ,EAEN,CAACF,SAAD,CAFM,CAAT;AAKA,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAYE;AAAS,IAAA,SAAS,YAAKL,UAAU,CAACa,SAAhB,cAA6Bb,UAAU,CAACc,UAAxC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEd,UAAU,CAACe,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,SAAS,EAAEf,UAAU,CAACgB,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,YAAY,CAACc,GAAb,CAAiB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,IAAP,SAAOA,IAAP;AAAA,QAAaC,KAAb,SAAaA,KAAb;AAAA,WAChB;AAAI,MAAA,SAAS,EAAEpB,UAAU,CAACqB,QAA1B;AAAoC,MAAA,GAAG,EAAEH,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGE,KADH,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGGF,EAHH,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKGC,IALH,CADgB;AAAA,GAAjB,CADH,CAFF,CAZF,CADF;AA6BD,CA1CA;;GAAMjB,I;;KAAAA,I;;AA2CP,eAAeA,IAAf","sourcesContent":["import{ useEffect, useState } from \"react\";\nimport Head from 'next/head'\nimport Layout, { siteTitle } from '../components/layout'\nimport utilStyles from '../styles/utils.module.css'\nimport { getSortedPostsData } from '../lib/posts'\nimport { operations} from '../pages/operations'\nexport async function getStaticProps() {\n  const allPostsData = getSortedPostsData()\n  return {\n    props: {\n      allPostsData\n    }\n  }\n}\n\n  // export async function getAllPostsFromServer() {\n  //   const allPostsDataFromServer = getAllPosts()\n  //   return {\n  //     props: {\n  //       allPostsDataFromServer\n  //     }\n  //   }\n  // }\n\n\n const Home=({ allPostsData , allPostsDataFromServer}) =>{\n  const [postState, setPostState] = useState();\n  const  getPosts =async () => {\n    console.log('Hello', )\n    await operations.getAllPosts().then((data) => setPostState( data))\n   await console.log('postState', postState);\n  };\n  // getPosts();\n  useEffect(() => {\n    getPosts();\n  }, [postState]);\n\n\n  return (\n    <Layout home>\n   \n      <Head>â€¦</Head>\n      {/* {postState&& postState.map((elem)=> (\n            <li className={utilStyles.listItem} key={id}>\n              {elem.title}\n              <br />\n              {elem.id}\n              <br />\n              {elem.body}\n            </li>\n         ))} */}\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n        <h2 className={utilStyles.headingLg}>Blog</h2>\n        <ul className={utilStyles.list}>\n          {allPostsData.map(({ id, date, title }) => (\n            <li className={utilStyles.listItem} key={id}>\n              {title}\n              <br />\n              {id}\n              <br />\n              {date}\n            </li>\n          ))}\n        </ul>\n      </section>\n    </Layout>\n  )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}
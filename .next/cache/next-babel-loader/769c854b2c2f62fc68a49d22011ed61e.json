{"ast":null,"code":"var _jsxFileName = \"E:\\\\TestTaskNextJs\\\\testDevOps\\\\TestTast\\\\nextjs-blog\\\\pages\\\\posts\\\\CreatePost.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useState } from 'react';\nimport axios from 'axios';\nimport Link from \"next/link\";\nimport Form from '../../components/form/Form';\naxios.defaults.headers.post['Content-Type'] = 'application/json; charset=UTF-8';\n\n// const postToAdd = {\n//     title: 'NEXT JS',\n//     body: 'Typescript',\n//   };\nconst createPost = () => {\n  const {\n    0: postText,\n    1: setPostText\n  } = useState([]);\n\n  const pushPost = async () => {\n    try {\n      const data = await axios({\n        method: 'post',\n        url: 'https://simple-blog-api.crew.red/posts' // data: postText\n\n      });\n      ;\n    } catch (error) {\n      console.log(\"POST ERROR\", error);\n      ;\n      throw new Error();\n    }\n  };\n\n  const addhandler = title => {\n    const post = {\n      title: title // body:body\n\n    };\n    setPostText(prev => [post, ...prev]);\n    console.log('textState', postText);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onAdd: addhandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), __jsx(\"div\", {\n    className: \"backToHome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"\\u2190 Back to home\"))));\n};\n\nexport default createPost;","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/pages/posts/CreatePost.tsx"],"names":["useState","axios","Link","Form","defaults","headers","post","createPost","postText","setPostText","pushPost","data","method","url","error","console","log","Error","addhandler","title","prev"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA6C,iCAA7C;;AAOA;AACA;AACA;AACA;AACA,MAAMC,UAAU,GAAC,MAAI;AACnB,QAAM;AAAA,OAACC,QAAD;AAAA,OAAUC;AAAV,MAAuBT,QAAQ,CAAU,EAAV,CAArC;;AACA,QAAMU,QAAQ,GAAC,YAAW;AACpB,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMV,KAAK,CAAC;AACvBW,QAAAA,MAAM,EAAE,MADe;AAEvBC,QAAAA,GAAG,EAAE,wCAFkB,CAGvB;;AAHuB,OAAD,CAAxB;AAKA;AAED,KARD,CAQE,OAAOC,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACF;AACE,YAAM,IAAIG,KAAJ,EAAN;AACD;AACF,GAdL;;AAiBI,QAAMC,UAAU,GAAEC,KAAD,IAAgB;AAC/B,UAAMb,IAAU,GAAC;AAEfa,MAAAA,KAAK,EAACA,KAFS,CAGf;;AAHe,KAAjB;AAODV,IAAAA,WAAW,CAACW,IAAI,IAAE,CAACd,IAAD,EAAM,GAAGc,IAAT,CAAP,CAAX;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBR,QAAzB;AACA,GAVD;;AAkBF,SACI,4BACA,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEU,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAGA;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CAHA,CADJ;AAcH,CAnDD;;AAoDA,eAAeX,UAAf","sourcesContent":["import {useState} from 'react';\r\nimport axios from 'axios'\r\nimport Link from \"next/link\";\r\nimport Form from '../../components/form/Form'\r\naxios.defaults.headers.post['Content-Type'] ='application/json; charset=UTF-8';\r\n \r\n interface IForm{\r\n    title:string\r\n    // body:string\r\n}\r\n\r\n// const postToAdd = {\r\n//     title: 'NEXT JS',\r\n//     body: 'Typescript',\r\n//   };\r\nconst createPost=()=>{\r\n  const [postText,setPostText]=useState<IForm[]>([])\r\n  const pushPost=async ()=> {\r\n        try {\r\n          const data = await axios({\r\n            method: 'post',\r\n            url: 'https://simple-blog-api.crew.red/posts',\r\n            // data: postText\r\n          }); \r\n          ;\r\n          \r\n        } catch (error) {\r\n          console.log(\"POST ERROR\", error);\r\n        ;\r\n          throw new Error();\r\n        }\r\n      }\r\n   \r\n \r\n      const addhandler=(title:string)=>{\r\n        const post:IForm={\r\n         \r\n          title:title,\r\n          // body:body\r\n          \r\n        }\r\n \r\n       setPostText(prev=>[post,...prev])\r\n       console.log('textState', postText)\r\n      }\r\n    \r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Form onAdd={addhandler}/>\r\n           \r\n        <div className=\"backToHome\">\r\n          <Link href=\"/\">\r\n            <a>‚Üê Back to home</a>\r\n          </Link>\r\n        </div>\r\n   \r\n        </>\r\n    )\r\n\r\n\r\n}\r\nexport default createPost"]},"metadata":{},"sourceType":"module"}
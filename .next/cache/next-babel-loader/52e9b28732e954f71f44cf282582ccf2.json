{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nexport async function getSortedPostsData() {\n  try {\n    const posts = await axios.get(\"https://simple-blog-api.crew.red/posts\");\n    return posts.data.map(post => {\n      return {\n        params: _objectSpread({\n          id: post.id.toString()\n        }, post)\n      };\n    });\n  } catch (error) {\n    console.log(\"ERRROR--------------------------------->\", error);\n    throw new Error();\n  }\n}\nexport async function getAllPostIds() {\n  try {\n    const posts = await axios.get(\"https://simple-blog-api.crew.red/posts\");\n    return posts.data.map(post => {\n      return {\n        params: {\n          id: post.id.toString()\n        }\n      };\n    });\n  } catch (error) {\n    console.log(\"ERRROR--------------------------------->\", error);\n    throw new Error();\n  }\n}\nexport async function getPostData(params) {\n  try {\n    const postsInfo = await axios.get(`https://simple-blog-api.crew.red/posts/${params.id}?_embed=comments`);\n    return postsInfo.data;\n  } catch (error) {\n    console.log(\"ERRROR--------------------------------->\", error);\n    throw new Error();\n  }\n}","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/lib/posts.js"],"names":["axios","getSortedPostsData","posts","get","data","map","post","params","id","toString","error","console","log","Error","getAllPostIds","getPostData","postsInfo"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAeC,kBAAf,GAAoC;AACzC,MAAI;AACF,UAAMC,KAAK,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,wCAAV,CAApB;AACA,WAAOD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AAC9B,aAAO;AACLC,QAAAA,MAAM;AACJC,UAAAA,EAAE,EAAEF,IAAI,CAACE,EAAL,CAAQC,QAAR;AADA,WAEDH,IAFC;AADD,OAAP;AAMD,KAPM,CAAP;AAQD,GAVD,CAUE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,KAAxD;AACA,UAAM,IAAIG,KAAJ,EAAN;AACD;AACF;AAED,OAAO,eAAeC,aAAf,GAA+B;AACpC,MAAI;AACF,UAAMZ,KAAK,GAAG,MAAMF,KAAK,CAACG,GAAN,CAAU,wCAAV,CAApB;AACA,WAAOD,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAgBC,IAAD,IAAU;AAC9B,aAAO;AACLC,QAAAA,MAAM,EAAE;AACNC,UAAAA,EAAE,EAAEF,IAAI,CAACE,EAAL,CAAQC,QAAR;AADE;AADH,OAAP;AAKD,KANM,CAAP;AAOD,GATD,CASE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,KAAxD;AACA,UAAM,IAAIG,KAAJ,EAAN;AACD;AACF;AAED,OAAO,eAAeE,WAAf,CAA2BR,MAA3B,EAAmC;AACxC,MAAI;AACF,UAAMS,SAAS,GAAG,MAAMhB,KAAK,CAACG,GAAN,CACrB,0CAAyCI,MAAM,CAACC,EAAG,kBAD9B,CAAxB;AAGA,WAAOQ,SAAS,CAACZ,IAAjB;AACD,GALD,CAKE,OAAOM,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,KAAxD;AACA,UAAM,IAAIG,KAAJ,EAAN;AACD;AACF","sourcesContent":["import axios from \"axios\";\r\nexport async function getSortedPostsData() {\r\n  try {\r\n    const posts = await axios.get(\"https://simple-blog-api.crew.red/posts\");\r\n    return posts.data.map((post) => {\r\n      return {\r\n        params: {\r\n          id: post.id.toString(),\r\n          ...post,\r\n        },\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.log(\"ERRROR--------------------------------->\", error);\r\n    throw new Error();\r\n  }\r\n}\r\n\r\nexport async function getAllPostIds() {\r\n  try {\r\n    const posts = await axios.get(\"https://simple-blog-api.crew.red/posts\");\r\n    return posts.data.map((post) => {\r\n      return {\r\n        params: {\r\n          id: post.id.toString(),\r\n        },\r\n      };\r\n    });\r\n  } catch (error) {\r\n    console.log(\"ERRROR--------------------------------->\", error);\r\n    throw new Error();\r\n  }\r\n}\r\n\r\nexport async function getPostData(params) {\r\n  try {\r\n    const postsInfo = await axios.get(\r\n      `https://simple-blog-api.crew.red/posts/${params.id}?_embed=comments`\r\n    );\r\n    return postsInfo.data;\r\n  } catch (error) {\r\n    console.log(\"ERRROR--------------------------------->\", error);\r\n    throw new Error();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
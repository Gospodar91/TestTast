{"ast":null,"code":"var _jsxFileName = \"E:\\\\TestTaskNextJs\\\\testDevOps\\\\TestTast\\\\nextjs-blog\\\\pages\\\\posts\\\\CreatePost.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Link from \"next/link\";\nimport Form from \"../../components/form/Form\";\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json; charset=UTF-8\";\n\nconst createPost = () => {\n  const initialState = {\n    title: null,\n    body: null\n  };\n  const {\n    0: postTitle,\n    1: setPostTitle\n  } = useState(null);\n  const {\n    0: postBody,\n    1: setPostBody\n  } = useState(null);\n  const {\n    0: total,\n    1: TotalState\n  } = useState(initialState);\n\n  const pushPost = async () => {\n    try {\n      const data = await axios({\n        method: \"post\",\n        url: \"https://simple-blog-api.crew.red/posts/\",\n        data: _objectSpread(_objectSpread({}, postTitle), postBody)\n      });\n    } catch (error) {\n      console.log(\"POST ERROR\", error);\n      throw new Error();\n    }\n  };\n\n  if (postTitle && postBody) {\n    pushPost();\n  }\n\n  const addhandler = (title, body) => {\n    const titlePost = {\n      title: title\n    };\n    const postMain = {\n      body: body\n    };\n    setPostTitle(titlePost);\n    setPostBody(postMain);\n  };\n\n  const addhandler2 = (title, body) => {\n    const mainPost = {\n      title: title,\n      body: body\n    };\n    setPostTitle(mainPost);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Form, {\n    onAdd: addhandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), __jsx(\"div\", {\n    className: \"backToHome\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, __jsx(Link, {\n    href: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, \"\\u2190 Back to home\"))));\n};\n\nexport default createPost;","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/pages/posts/CreatePost.tsx"],"names":["useState","axios","Link","Form","defaults","headers","post","createPost","initialState","title","body","postTitle","setPostTitle","postBody","setPostBody","total","TotalState","pushPost","data","method","url","error","console","log","Error","addhandler","titlePost","postMain","addhandler2","mainPost"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,4BAAjB;AACAF,KAAK,CAACG,QAAN,CAAeC,OAAf,CAAuBC,IAAvB,CAA4B,cAA5B,IAA8C,iCAA9C;;AAcA,MAAMC,UAAoB,GAAG,MAAM;AACjC,QAAMC,YAAY,GAAC;AACjBC,IAAAA,KAAK,EAAC,IADW;AAEjBC,IAAAA,IAAI,EAAC;AAFY,GAAnB;AAIA,QAAM;AAAA,OAACC,SAAD;AAAA,OAAYC;AAAZ,MAA4BZ,QAAQ,CAAS,IAAT,CAA1C;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAA0Bd,QAAQ,CAAQ,IAAR,CAAxC;AACA,QAAM;AAAA,OAACe,KAAD;AAAA,OAAQC;AAAR,MAAsBhB,QAAQ,CAACQ,YAAD,CAApC;;AAGA,QAAMS,QAAQ,GAAG,YAAY;AAC3B,QAAI;AACF,YAAMC,IAAI,GAAG,MAAMjB,KAAK,CAAC;AACvBkB,QAAAA,MAAM,EAAE,MADe;AAEvBC,QAAAA,GAAG,EAAE,yCAFkB;AAGvBF,QAAAA,IAAI,kCAAOP,SAAP,GAAqBE,QAArB;AAHmB,OAAD,CAAxB;AAKD,KAND,CAME,OAAOQ,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,KAA1B;AACA,YAAM,IAAIG,KAAJ,EAAN;AACD;AACF,GAXD;;AAYA,MAAIb,SAAS,IAAIE,QAAjB,EAA2B;AACzBI,IAAAA,QAAQ;AACT;;AAED,QAAMQ,UAAU,GAAG,CAAChB,KAAD,EAAgBC,IAAhB,KAAiC;AAClD,UAAMgB,SAAiB,GAAG;AACxBjB,MAAAA,KAAK,EAAEA;AADiB,KAA1B;AAGA,UAAMkB,QAAe,GAAG;AACtBjB,MAAAA,IAAI,EAAEA;AADgB,KAAxB;AAIAE,IAAAA,YAAY,CAACc,SAAD,CAAZ;AACAZ,IAAAA,WAAW,CAACa,QAAD,CAAX;AACD,GAVD;;AAYA,QAAMC,WAAW,GAAG,CAACnB,KAAD,EAAgBC,IAAhB,KAAiC;AACnD,UAAMmB,QAAgB,GAAG;AACvBpB,MAAAA,KAAK,EAAEA,KADgB;AAEvBC,MAAAA,IAAI,EAACA;AAFkB,KAAzB;AAMAE,IAAAA,YAAY,CAACiB,QAAD,CAAZ;AAED,GATD;;AAWA,SACE,4BACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,CADF,CAFF,CADF;AAUD,CA3DD;;AA4DA,eAAelB,UAAf","sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Link from \"next/link\";\r\nimport Form from \"../../components/form/Form\";\r\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json; charset=UTF-8\";\r\n\r\ninterface Ititle {\r\n  title: string;\r\n}\r\ninterface IBody {\r\n  body: string;\r\n}\r\ninterface Itotal{\r\n  title:string\r\n  body:string\r\n}\r\n\r\n\r\nconst createPost: React.FC = () => {\r\n  const initialState={\r\n    title:null,\r\n    body:null\r\n  }\r\n  const [postTitle, setPostTitle] = useState<Ititle>(null);\r\n  const [postBody, setPostBody] = useState<IBody>(null);\r\n  const [total, TotalState] = useState(initialState);\r\n  \r\n\r\n  const pushPost = async () => {\r\n    try {\r\n      const data = await axios({\r\n        method: \"post\",\r\n        url: \"https://simple-blog-api.crew.red/posts/\",\r\n        data: { ...postTitle, ...postBody },\r\n      });\r\n    } catch (error) {\r\n      console.log(\"POST ERROR\", error);\r\n      throw new Error();\r\n    }\r\n  };\r\n  if (postTitle && postBody) {\r\n    pushPost();\r\n  }\r\n\r\n  const addhandler = (title: string, body: string) => {\r\n    const titlePost: Ititle = {\r\n      title: title,\r\n    };\r\n    const postMain: IBody = {\r\n      body: body,\r\n    };\r\n\r\n    setPostTitle(titlePost);\r\n    setPostBody(postMain);\r\n  };\r\n\r\n  const addhandler2 = (title: string, body: string) => {\r\n    const mainPost: Itotal = {\r\n      title: title,\r\n      body:body\r\n    };\r\n  \r\n\r\n    setPostTitle(mainPost);\r\n  \r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Form onAdd={addhandler} />\r\n      <div className=\"backToHome\">\r\n        <Link href=\"/\">\r\n          <a>‚Üê Back to home</a>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default createPost;\r\n"]},"metadata":{},"sourceType":"module"}
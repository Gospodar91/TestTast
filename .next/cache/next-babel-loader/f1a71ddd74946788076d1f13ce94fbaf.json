{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"E:\\\\TestTaskNextJs\\\\testDevOps\\\\TestTast\\\\nextjs-blog\\\\pages\\\\index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect, useState } from \"react\";\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Layout, { siteTitle } from '../components/layout';\nimport utilStyles from '../styles/utils.module.css';\nimport { operations } from '../pages/operations';\nexport var __N_SSG = true;\nexport function getAllPostsFromServer() {\n  return _getAllPostsFromServer.apply(this, arguments);\n}\n\nfunction _getAllPostsFromServer() {\n  _getAllPostsFromServer = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var allPostsDataFromServer;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            allPostsDataFromServer = getAllPosts();\n            return _context.abrupt(\"return\", {\n              props: {\n                allPostsDataFromServer: allPostsDataFromServer\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getAllPostsFromServer.apply(this, arguments);\n}\n\nvar Home = function Home(_ref) {\n  var allPostsData = _ref.allPostsData,\n      allPostsDataFromServer = _ref.allPostsDataFromServer;\n  console.log('allPostData', allPostsData); // const [postState, setState] = useState([]);\n  // const  getPosts =async () => {\n  //   await operations.getAllPosts().then(data => {\n  //     return( \n  //       console.log('datUEIIIa', data),setState('hhhhhhh')) \n  //   })\n  //  await console.log('postState', postState);\n  // };\n  // getPosts();\n  // useEffect(() => {\n  //   getPosts();\n  // }, [postState]);\n\n  return __jsx(Layout, {\n    home: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"\\u2026\"), __jsx(\"section\", {\n    className: \"\".concat(utilStyles.headingMd, \" \").concat(utilStyles.padding1px),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    className: utilStyles.headingLg,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Blog\"), __jsx(\"ul\", {\n    className: utilStyles.list,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, allPostsData.map(function (_ref2) {\n    var id = _ref2.id,\n        date = _ref2.date,\n        title = _ref2.title;\n    return __jsx(\"li\", {\n      className: utilStyles.listItem,\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }, __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(id),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 12\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 14\n      }\n    }, title)), __jsx(\"br\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }\n    }), __jsx(\"small\", {\n      className: utilStyles.lightText,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 12\n      }\n    }, __jsx(Date, {\n      dateString: date,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 14\n      }\n    })));\n  }))));\n};\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["E:/TestTaskNextJs/testDevOps/TestTast/nextjs-blog/pages/index.js"],"names":["useEffect","useState","Head","Link","Layout","siteTitle","utilStyles","operations","getAllPostsFromServer","allPostsDataFromServer","getAllPosts","props","Home","allPostsData","console","log","headingMd","padding1px","headingLg","list","map","id","date","title","listItem","lightText"],"mappings":";;;;;;;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,sBAAlC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,SAASC,UAAT,QAA0B,qBAA1B;;AAWE,gBAAsBC,qBAAtB;AAAA;AAAA;;;oFAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AACCC,YAAAA,sBADD,GAC0BC,WAAW,EADrC;AAAA,6CAEE;AACLC,cAAAA,KAAK,EAAE;AACLF,gBAAAA,sBAAsB,EAAtBA;AADK;AADF,aAFF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AAUR,IAAMG,IAAI,GAAC,SAALA,IAAK,OAA6C;AAAA,MAA1CC,YAA0C,QAA1CA,YAA0C;AAAA,MAA3BJ,sBAA2B,QAA3BA,sBAA2B;AACtDK,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,YAA3B,EADsD,CAEvD;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SACE,MAAC,MAAD;AAAQ,IAAA,IAAI,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAYE;AAAS,IAAA,SAAS,YAAKP,UAAU,CAACU,SAAhB,cAA6BV,UAAU,CAACW,UAAxC,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEX,UAAU,CAACY,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE;AAAI,IAAA,SAAS,EAAEZ,UAAU,CAACa,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,YAAY,CAACO,GAAb,CAAiB;AAAA,QAAGC,EAAH,SAAGA,EAAH;AAAA,QAAOC,IAAP,SAAOA,IAAP;AAAA,QAAaC,KAAb,SAAaA,KAAb;AAAA,WACjB;AAAI,MAAA,SAAS,EAAEjB,UAAU,CAACkB,QAA1B;AAAoC,MAAA,GAAG,EAAEH,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYA,EAAZ,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAIE,KAAJ,CADF,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKA;AAAO,MAAA,SAAS,EAAEjB,UAAU,CAACmB,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAM,MAAA,UAAU,EAAEH,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CALA,CADiB;AAAA,GAAjB,CADH,CAFF,CAZF,CADF;AA+BD,CAhDA;;KAAMV,I;AAiDP,eAAeA,IAAf","sourcesContent":["import{ useEffect, useState } from \"react\";\nimport Head from 'next/head'\nimport Link from 'next/link'\n\nimport Layout, { siteTitle } from '../components/layout'\nimport utilStyles from '../styles/utils.module.css'\nimport { getSortedPostsData ,} from '../lib/posts'\nimport { operations} from '../pages/operations'\nexport async function getStaticProps() {\n  const allPostsData = getSortedPostsData()\n  return {\n    props: {\n      allPostsData\n    }\n  }\n}\n\n\n  export async function getAllPostsFromServer() {\n    const allPostsDataFromServer = getAllPosts()\n    return {\n      props: {\n        allPostsDataFromServer\n      }\n    }\n  }\n\n\n const Home=({ allPostsData , allPostsDataFromServer}) =>{\n   console.log('allPostData', allPostsData)\n  // const [postState, setState] = useState([]);\n  // const  getPosts =async () => {\n  //   await operations.getAllPosts().then(data => {\n  //     return( \n  //       console.log('datUEIIIa', data),setState('hhhhhhh')) \n    \n  //   })\n  //  await console.log('postState', postState);\n  // };\n  // getPosts();\n  // useEffect(() => {\n  //   getPosts();\n  // }, [postState]);\n\n\n  return (\n    <Layout home>\n   \n      <Head>â€¦</Head>\n      {/* {postState&& postState.map((elem)=> (\n            <li className={utilStyles.listItem} key={id}>\n              {elem.title}\n              <br />\n              {elem.id}\n              <br />\n              {elem.body}\n            </li>\n         ))} */}\n      <section className={`${utilStyles.headingMd} ${utilStyles.padding1px}`}>\n        <h2 className={utilStyles.headingLg}>Blog</h2>\n        <ul className={utilStyles.list}>\n          {allPostsData.map(({ id, date, title }) => (\n           <li className={utilStyles.listItem} key={id}>\n           <Link href=\"/posts/[id]\" as={`/posts/${id}`}>\n             <a>{title}</a>\n           </Link>\n           <br />\n           <small className={utilStyles.lightText}>\n             <Date dateString={date} />\n           </small>\n         </li>\n          ))}\n        </ul>\n      </section>\n    </Layout>\n  )\n}\nexport default Home;"]},"metadata":{},"sourceType":"module"}